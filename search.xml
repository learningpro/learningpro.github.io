<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HiWiFi极路由变砖重生]]></title>
      <url>http://learningpro.github.io/2016/06/26/HiWiFi%E6%9E%81%E8%B7%AF%E7%94%B1%E5%8F%98%E7%A0%96%E9%87%8D%E7%94%9F/</url>
      <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><pre><code>手里有一台极路由一代，编号是极1 HC6361这一款，用了两年都还正常，今天要给变更一下网络配置，于是登录到后台进行了一番配置，然后重启了路由器，然后就悲剧了。。。。。

正面面板上只有系统灯在闪烁，其余的灯都不亮，连接到LAN口之后发现，DHCP得到的IP地址是169.254开头的一个地址，并不是192开头的默认地址。经过多次重启都无法正常联网使用。
</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">至此为止已经变砖</span><br></pre></td></tr></table></figure>
<h3 id="修砖"><a href="#修砖" class="headerlink" title="修砖"></a>修砖</h3><p>主要参考<a href="http://openwrt.io/docs/gee/" target="_blank" rel="external">OpenWRT的官方教程</a>，不要使用百度搜索的结果。。。。。百度给的都是什么下载官方的修砖工具啊，只能用win7什么的，试过无效。<br>本人电脑是win10的，虚拟机里有Ubuntu环境，于是就将网卡进行桥接，并且根据教程设置好了tftpd以及IP地址，步骤如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tftpd-hpa tftp-hpa</span><br></pre></td></tr></table></figure></p>
<p>配置tftpd-hpa<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">'s/^TFTP_ADDRESS.*/TFTP_ADDRESS="0.0.0.0:69"/'</span> /etc/default/tftpd-hpa</span><br></pre></td></tr></table></figure></p>
<p>这时候拷贝一个recovery.bin到虚拟机中，这个recovery.bin可以使用之前百度上搜到的官方修砖工具压缩包里的那个，并将recovery.bin复制到/var/lib/tftpboot/路径当中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 /var/lib/tftpboot/</span><br><span class="line">cp ~/Downloads/recovery.bin /var/lib/tftpboot/recovery.bin</span><br><span class="line">chmod a+r /var/lib/tftpboot/recovery.bin</span><br><span class="line">sudo service tftpd-hpa restart</span><br></pre></td></tr></table></figure></p>
<p>接着测试一下tftp的可用性<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">tftp localhost</span><br><span class="line">tftp&gt; get recovery.bin</span><br><span class="line">tftp&gt; q</span><br><span class="line">ll recovery.bin</span><br></pre></td></tr></table></figure></p>
<p>如果一切都正常就可以进行最关键的一步，将recovery.bin通过tftp传给路由器了。</p>
<p>按住极路由的RESET键（用尖锐物（笔、取卡针、通针等）），给极路由通电。</p>
<p>观察电脑中tftp server的发送情况（可通过网速看出来），传输完毕即可松开RESET键。</p>
<p>路由器面板的多个灯会轮流亮起（跑马灯效果），跑完以后，路由器自动重启，刷机即完成。</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">至此，极路由<span class="number">1</span>代重生。</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[还有很大提升空间的代码]]></title>
      <url>http://learningpro.github.io/2016/06/26/%E8%BF%98%E6%9C%89%E5%BE%88%E5%A4%A7%E6%8F%90%E5%8D%87%E7%A9%BA%E9%97%B4%E7%9A%84%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="寻找最大全1正方形，返回边长"><a href="#寻找最大全1正方形，返回边长" class="headerlink" title="寻找最大全1正方形，返回边长"></a>寻找最大全1正方形，返回边长</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findMatrix</span><span class="params">(<span class="built_in">string</span> matrix, <span class="keyword">int</span> startLength, <span class="keyword">int</span> column, <span class="keyword">int</span> row)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> currentLength = startLength;</span><br><span class="line">    <span class="keyword">int</span> totalPixel=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=column-currentLength;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=row-currentLength; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            totalPixel = currentLength * currentLength;</span><br><span class="line">            <span class="comment">// 外边两层循环便利所有起点</span></span><br><span class="line">            <span class="comment">// 下边两层循环，找到以（j,i）为左上角起点的正方形</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> m=<span class="number">0</span>; m&lt;currentLength; m++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> n=<span class="number">0</span>; n&lt;currentLength; n++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (matrix[j*column+i+n*column+m]==<span class="string">'0'</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(matrix[j*column+i+n*column+m]==<span class="string">'1'</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        totalPixel -=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (totalPixel==<span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">return</span> currentLength;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (totalPixel!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 递减边长</span></span><br><span class="line">        <span class="keyword">if</span> (currentLength&gt;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> findMatrix(matrix, currentLength<span class="number">-1</span>, column, row);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> currentLength;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sideLength;</span><br><span class="line">    <span class="keyword">int</span> row,column;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; row &gt;&gt; column;</span><br><span class="line">    <span class="keyword">if</span>(row &gt;= column)</span><br><span class="line">    &#123;</span><br><span class="line">        sideLength = column;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        sideLength = row;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> total = row * column;</span><br><span class="line">    <span class="built_in">string</span> matrix;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;row;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; column;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> number;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; number;</span><br><span class="line">            matrix.append(number);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> allZero = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> m=<span class="number">0</span>; m&lt;total; m++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(matrix[m]==<span class="string">'1'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            allZero = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (allZero)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 全0</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> answer = findMatrix(matrix, sideLength, column, row);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; answer &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试结果如图<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/最大全1正方形.png" alt="pic"></p>
<h2 id="寻找B是否能到达H"><a href="#寻找B是否能到达H" class="headerlink" title="寻找B是否能到达H"></a>寻找B是否能到达H</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">checkDirection</span><span class="params">(<span class="built_in">string</span> matrix,<span class="keyword">int</span> position,<span class="keyword">int</span> row, <span class="keyword">int</span> column)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> total = row * column;</span><br><span class="line">	<span class="built_in">string</span> direction=<span class="string">"0000"</span>;</span><br><span class="line">	<span class="keyword">if</span>(position-column&gt;=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		direction[<span class="number">0</span>] = <span class="string">'1'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((position+<span class="number">1</span>)&lt;=(total<span class="number">-1</span>) &amp;&amp; (position+<span class="number">1</span>)%column!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		direction[<span class="number">1</span>] = <span class="string">'1'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((position+column)&lt;=(total<span class="number">-1</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		direction[<span class="number">2</span>] = <span class="string">'1'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((position<span class="number">-1</span>)&gt;=<span class="number">0</span> &amp;&amp; (position%column)!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		direction[<span class="number">3</span>] = <span class="string">'1'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> direction;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">hasRoad</span><span class="params">(<span class="built_in">string</span> matrix,<span class="keyword">int</span> position,<span class="keyword">int</span> row, <span class="keyword">int</span> column,<span class="keyword">char</span> *coverMap)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	coverMap[position] = <span class="string">'0'</span>;</span><br><span class="line">	<span class="built_in">string</span> direction;</span><br><span class="line">	direction = checkDirection(matrix,position,row,column);</span><br><span class="line">	<span class="keyword">int</span> index[<span class="number">4</span>] = &#123; position-column, position+<span class="number">1</span>, position+column, position<span class="number">-1</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(direction[i]==<span class="string">'1'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(matrix[index[i]]==<span class="string">'-'</span> || matrix[index[i]]==<span class="string">'H'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				direction[i]=<span class="string">'1'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(matrix[index[i]]==<span class="string">'#'</span> || matrix[index[i]]==<span class="string">'B'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				direction[i]=<span class="string">'0'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(coverMap[index[i]]==<span class="string">'0'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				direction[i]=<span class="string">'0'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> direction;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">findHome</span><span class="params">(<span class="built_in">string</span> matrix,<span class="keyword">int</span> startPoint,<span class="keyword">int</span> row, <span class="keyword">int</span> column,<span class="keyword">char</span> *coverMap)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> found = <span class="string">'N'</span>;</span><br><span class="line">	<span class="built_in">string</span> direction = hasRoad(matrix,startPoint,row,column,coverMap);</span><br><span class="line">	<span class="keyword">int</span> index[<span class="number">4</span>] = &#123; startPoint-column, startPoint+<span class="number">1</span>, startPoint+column, startPoint<span class="number">-1</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(direction[i]==<span class="string">'1'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// cout &lt;&lt; "startPoint" &lt;&lt; startPoint &lt;&lt; endl;</span></span><br><span class="line">			<span class="keyword">if</span>(matrix[index[i]]==<span class="string">'H'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="string">'Y'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>;n&lt;<span class="number">4</span>;n++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(direction[n]==<span class="string">'1'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			found = findHome(matrix,index[n],row,column,coverMap);</span><br><span class="line">			<span class="keyword">if</span>(found==<span class="string">'Y'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="string">'Y'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> found;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> row,column;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; row &gt;&gt; column;</span><br><span class="line">	<span class="keyword">int</span> total = row*column;</span><br><span class="line">	<span class="keyword">char</span> *cover;</span><br><span class="line">	cover = <span class="keyword">new</span> <span class="keyword">char</span>(total);</span><br><span class="line">	<span class="built_in">string</span> forest;</span><br><span class="line">	<span class="keyword">int</span> positionB = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> positionH = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;row;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt; column;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> road;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; road;</span><br><span class="line">			<span class="keyword">if</span>(road==<span class="string">"-"</span> || road==<span class="string">"H"</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				cover[j * column + i] = <span class="string">'1'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				cover[j * column + i] = <span class="string">'0'</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(road==<span class="string">"B"</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				positionB = j * column + i;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(road==<span class="string">"H"</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				positionH = j * column + i;</span><br><span class="line">			&#125;</span><br><span class="line">            forest.append(road);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; findHome(forest,positionB,row,column,cover) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如图<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/QQ截图20150917171917.png" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/QQ截图20150917172012.png" alt="pic"><br>仍然存在的问题是：没有选择最短路径，有时候Visual Studio会出错<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/error.png" alt="pic"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[代码练习]]></title>
      <url>http://learningpro.github.io/2016/06/26/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>选举投票小练习</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">class</span> Node</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Node()&#123;&#125;</span><br><span class="line">    Node(<span class="built_in">string</span> name)&#123;candidateName = name;next=<span class="literal">NULL</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setNext</span><span class="params">(Node *p)</span></span>&#123;next=p;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setTicketNumber</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;ticketNumber=n;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setCandidateName</span><span class="params">(<span class="built_in">string</span> name)</span></span>&#123;candidateName = name;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getTicketNumber</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> ticketNumber;&#125;</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">getCandidateName</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> candidateName;&#125;</span><br><span class="line">    <span class="function">Node *<span class="title">getNext</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> next;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> ticketNumber;</span><br><span class="line">    <span class="built_in">string</span> candidateName;</span><br><span class="line">    Node *next;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Linklist <span class="comment">//链表类</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Linklist()&#123;head=<span class="literal">NULL</span>;&#125;</span><br><span class="line">    Linklist(<span class="built_in">string</span> name)&#123; head = <span class="keyword">new</span> Node(name); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addAtEnd</span><span class="params">(<span class="built_in">string</span> name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">visitAllNode</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">voteCandidate</span><span class="params">(<span class="built_in">string</span> name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Node *head;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">void</span> Linklist::addAtEnd(<span class="built_in">string</span> name)  <span class="comment">//往链表尾添加节点</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *p=head;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)&#123; head = <span class="keyword">new</span> Node(name);&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(p-&gt;getNext()!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p= p-&gt;getNext();</span><br><span class="line">        &#125;<span class="comment">//用p来指向最后一个节点</span></span><br><span class="line">        p-&gt;setNext(<span class="keyword">new</span> Node(name));<span class="comment">//插入节点</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Linklist::visitAllNode()<span class="comment">//遍历链表</span></span><br><span class="line">&#123;</span><br><span class="line">    Node *p;</span><br><span class="line">    p=head;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"空链表!"</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(p-&gt;getNext()!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p=p-&gt;getNext();</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt; p-&gt;getCandidateName() &lt;&lt; <span class="string">" "</span> &lt;&lt; p-&gt;getTicketNumber() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; head-&gt;getTicketNumber() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Linklist::voteCandidate(<span class="built_in">string</span> name)</span><br><span class="line">&#123;</span><br><span class="line">    Node *p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">if</span> (p==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (p-&gt;getNext()!=<span class="literal">NULL</span> &amp;&amp; p-&gt;getCandidateName()!= name)</span><br><span class="line">        &#123;</span><br><span class="line">            p=p-&gt;getNext();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;getCandidateName() == name)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> currentTicketNumber = p-&gt;getTicketNumber();</span><br><span class="line">            p-&gt;setTicketNumber(currentTicketNumber+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            head-&gt;setTicketNumber(head-&gt;getTicketNumber()+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p-&gt;getTicketNumber();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Linklist *pl = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    pl = <span class="keyword">new</span> Linklist(<span class="string">"error"</span>); <span class="comment">//创建链表首节点为error,记录无效票</span></span><br><span class="line">    <span class="built_in">string</span> line;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;line)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (line == <span class="string">"getVoteResult"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            pl-&gt;visitAllNode();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(line == <span class="string">"addCandidate"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; line;</span><br><span class="line">            <span class="built_in">string</span> candidateName = line;</span><br><span class="line">            pl-&gt;addAtEnd(candidateName);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(line == <span class="string">"vote"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; line;</span><br><span class="line">            <span class="built_in">string</span> candidateName = line;</span><br><span class="line">            pl-&gt;voteCandidate(line);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[黑苹果之路]]></title>
      <url>http://learningpro.github.io/2016/06/26/%E9%BB%91%E8%8B%B9%E6%9E%9C%E4%B9%8B%E8%B7%AF/</url>
      <content type="html"><![CDATA[<p>#Snow leopard安装记 — 2011.10.02</p>
<p>原版硬盘安装-&gt; DSDT-&gt;安装驱动kext，repair permission,rebuild cache,reboot-&gt;升级到10.6.5。。。。。。<br>声卡用Voodoohda.kext最新版，耳机也可以用了<br>显卡有点惨，无解的GMA4500，用GMA3100替代，可以在32位下修改分辨率，无法开启QE<br>网卡修改IO80211family.kext的info.plist，加入设备id和vendor id，修改DSDT PR02下面加入device和method，repair permission and rebuild cache,reboot,32位模式启动即可，发现无线网络并可以连接，速度很快。<br>虽然写的只有6行，但是每一行都要耗费几个小时，尤其是修改DSDT的时候。。。。。。。<br>祝安装mac的朋友好运，希望不要像我这样，网卡显卡都是无解的，还要自己改。。。。<br>这一次安装跟一年前那次对比，最大的不同在于，这次使用的是原版光盘，不是国内修改过的，感觉性能上有些进步，切换流畅，USB识别完全正常。</p>
<p>以下纯是贴图，首先看看当年的笔记本吧<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/emachines0.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/emachines1.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/emachines2.jpg" alt="pic"><br>再来回顾一下当年在这台2000元的笔记本上的成果吧，摄像头加三卡都完美工作。完全胜任日常工作，或说就这个破本，显卡和网卡都是号称全球无解的，最终功夫不负有心人，手改驱动，无数次重装，终于搞定。<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hacintosh1.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh2.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh3.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh4.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh5.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh6.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh7.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh8.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh9.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/hackintosh12.jpg" alt="pic"><br>之后的一段时间，用实验室的台式机，安装vmware，在vmware的虚拟机里使用黑苹果，速度非常卡，而且经常报错，不能用来工作。<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware1.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware2.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware3.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware4.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware5.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware6.jpg" alt="pic"><br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/vmware7.jpg" alt="pic"><br>最后来一张乔帮主早年的采访照片<br><img src="http://7xjxqh.media1.z0.glb.clouddn.com/Jobs.jpg" alt="pic"><br>他们，指的是那个叫窗户的。</p>
<p>如果你觉得本文有趣，可以微信扫码打赏支持一下作者，感谢您的阅读</p>
<p><img src="http://7xnkuc.com1.z0.glb.clouddn.com/%40%2Fblog%2Ffooter%2Fsmall.png" alt="pic"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://learningpro.github.io/2016/06/26/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
